# reg-split
bands_reg_w[[rep]] <- reg_weighted_split_prediction_bands(regression_fit_mean_error$fit_mean,
regression_fit_mean_error$fit_error,
xTrain=data_I2$x,yTrain = data_I2$y,
xTest=data_test$x,
alpha=alpha,
y_grid = pred_I2$z,
yTest=data_test$y)
}
reg_weighted_split_prediction_bands <- function(reg_fit_mean,
reg_fit_error,
xTrain,yTrain,
xTest,
alpha=0.1,
y_grid,
yTest=NULL)
{
pred_train_mean <- predict(reg_fit_mean,xTrain)
pred_test_mean <- predict(reg_fit_mean,xTest)
pred_train_error <- predict(reg_fit_error,xTrain)
pred_test_error <- predict(reg_fit_error,xTest)
# observed densities:
conformity_score_train <- -abs(pred_train_mean-yTrain)/pred_train_error
if(!is.null(yTest))
{
yTest_covered <- rep(NA,length(yTest))
conformity_score_test <- -abs(pred_test_mean-yTest)/pred_test_error
}
#prediction_bands <- list()
prediction_bands_which_belong <- list()
ths <- quantile(conformity_score_train,probs=alpha)
for(ii in 1:nrow(xTest))
{
prediction_bands_which_belong[[ii]] <- -abs(y_grid-pred_test_mean[ii])/pred_test_error >=ths
}
if(!is.null(yTest))
{
yTest_covered <- conformity_score_test >= ths
}
if(!is.null(yTest))
{
return(list(prediction_bands=prediction_bands_which_belong,
yTest_covered=yTest_covered,
y_grid=y_grid))
} else {
return(list(prediction_bands=prediction_bands_which_belong,
y_grid=y_grid))
}
}
for(rep in 1:n_repetitions)
{
data_test <- generate_data(n=n_test,x=data_test_aux$x)
# CD-split global
# reg-split
bands_reg_w[[rep]] <- reg_weighted_split_prediction_bands(regression_fit_mean_error$fit_mean,
regression_fit_mean_error$fit_error,
xTrain=data_I2$x,yTrain = data_I2$y,
xTest=data_test$x,
alpha=alpha,
y_grid = pred_I2$z,
yTest=data_test$y)
}
eval_prediction_bands(xTest=data_test$x,
bands_reg_w,
alpha=alpha)
source("../requirements.R")
source("../base_functions.R")
folder <- "../rds/gaussian_hom"
setwd("/mnt/62e7a18d-9e67-46b5-8b12-bcb7dc0301ab/Dropbox/Izbicki/Research/UFSCar/Gilson/conformal-cde-experiments/simulations")
source("../requirements.R")
source("../base_functions.R")
folder <- "../rds/gaussian_hom"
dir.create(folder, showWarnings = FALSE)
data_plot <- paste0(dir,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
data_plot <- paste0(dir,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
folder
folder <- "../rds/gamma/"
data_plot <- paste0(dir,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
data_plot <- paste0(dir,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
folder
list.files(pattern = ".RDS",path = folder)
paste0(dir,list.files(pattern = ".RDS",path = folder))
data_plot <- paste0(list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id))
folder <- "../rds/gaussian_het/"
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
folder <- "../rds/gaussian_hom/"
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id))
folder <- "../rds/gaussian_het/"
source("../requirements.R")
source("../base_functions.R")
folder <- "../rds/gaussian_hom/"
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id))
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id))+
theme_minimal(base_size = 14)
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id))+
theme_minimal(base_size = 14)+ ylab("Conditonal coverage mean absolute deviation")
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Conditonal coverage mean absolute deviation")
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id,type=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Conditonal coverage mean absolute deviation")
?geom_line
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id,linetype=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Conditonal coverage mean absolute deviation")
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id,linetype=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Conditonal coverage mean absolute deviation")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1))
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id,linetype=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Conditonal coverage mean absolute deviation")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+xlim(0,1)
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id,linetype=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Conditonal coverage mean absolute deviation")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0))
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id,linetype=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Conditonal coverage mean absolute deviation")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+ expand_limits(x = 0, y = 0)
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id,linetype=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Conditonal coverage mean absolute deviation")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+ expand_limits(x = 0)
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id,linetype=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Conditonal coverage mean absolute deviation")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+ expand_limits(y = 0)
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_coverage,color=.id,linetype=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Conditonal coverage mean absolute deviation")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
expand_limits(y = 0)+
theme(legend.title = element_blank())
ggplot(data_plot) +
geom_line(aes(x=n,y=average_size,color=.id,linetype=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Average size")+
expand_limits(y = 0)+
theme(legend.title = element_blank())
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_size,color=.id,linetype=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Size absolute deviation")+
expand_limits(y = 0)+
theme(legend.title = element_blank())
ggplot(data_plot) +
geom_line(aes(x=n,y=mean_absolute_deviation_size,color=.id,linetype=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Size absolute deviation")+
theme(legend.title = element_blank())
ggplot(data_plot) +
geom_line(aes(x=n,y=global_coverage,color=.id,linetype=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Global coverage")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
expand_limits(y = 0)+
theme(legend.title = element_blank())
ggplot(data_plot) +
geom_line(aes(x=n,y=global_coverage,color=.id,linetype=.id),size=2)+
theme_minimal(base_size = 14)+ ylab("Global coverage")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1))+
expand_limits(y = c(0,1))+
theme(legend.title = element_blank())
folder <- "../rds/gamma/"
read_all_rds <- function(folder)
{
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
data_plot <- lapply(data_plot, function(x) {
data <- matrix(NA,length(x),length(x[[1]]))
colnames(data) <- names(x[[1]])
for(ii in 1:length(x))
{
data[ii,] <- unlist(x[[ii]])
}
return(data)
})
names(data_plot) <- tools::file_path_sans_ext(list.files(pattern = ".RDS",path = folder))
data_plot <- ldply(data_plot, data.frame)
return(data_plot)
}
source("../requirements.R")
source("../base_functions.R")
data_plot <- read_all_rds("rds/gamma/")
folder="rds/gamma/"
data_plot <- paste0(folder,list.files(pattern = ".RDS",path = folder)) %>%
map(readRDS)
setwd("/mnt/62e7a18d-9e67-46b5-8b12-bcb7dc0301ab/Dropbox/Izbicki/Research/UFSCar/Gilson/conformal-cde-experiments")
source("../requirements.R")
source("../base_functions.R")
data_plot <- read_all_rds("rds/gamma/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gaussian_het/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gaussian_hom/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gaussian_het/")
plot_perfomance_n(data_plot)
source("../requirements.R")
source("../base_functions.R")
source("../requirements.R")
source("requirements.R")
source("base_functions.R")
data_plot <- read_all_rds("rds/gamma/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gaussian_het/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gaussian_hom/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gamma/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gaussian_het/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gaussian_hom/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gaussian_hom/")
plot_perfomance_n(data_plot)
generate_bimodal <- function(n,d,x=NULL)
{
if(is.null(x))
{
x=matrix(runif(n*d,-1.5,1.5),n,d)
}
f=(x[,1]-1)^2*(x[,1]+1)
g=ifelse(x[,1]> -0.5,2*sqrt(x[,1]+0.5),0)
s=1/4+abs(x[,1])
# response
y=ifelse(runif(n)>0.5,f-g,f+g)+rnorm(n,0,s^2)
return(list(x=x,y=y))
}
d=generate_bimodal(10000,100)
generate_bimodal <- function(n,d,x=NULL)
{
if(is.null(x))
{
x=matrix(runif(n*d,-1.5,1.5),n,d)
}
f=(x[,1]-1)^2*(x[,1]+1)
g=rep(0,n)
g[x[,1]> -0.5]=2*sqrt(x[,1]+0.5)
s=1/4+abs(x[,1])
# response
y=ifelse(runif(n)>0.5,f-g,f+g)+rnorm(n,0,s^2)
return(list(x=x,y=y))
}
d=generate_bimodal(10000,100)
generate_bimodal <- function(n,d,x=NULL)
{
if(is.null(x))
{
x=matrix(runif(n*d,-1.5,1.5),n,d)
}
f=(x[,1]-1)^2*(x[,1]+1)
g=rep(0,n)
g[x[,1]> -0.5]=2*sqrt(x[x[,1]> -0.5,1]+0.5)
s=1/4+abs(x[,1])
# response
y=ifelse(runif(n)>0.5,f-g,f+g)+rnorm(n,0,s^2)
return(list(x=x,y=y))
}
d=generate_bimodal(10000,100)
plot(d$x[,1],d$y)
generate_bimodal <- function(n,d,x=NULL)
{
if(is.null(x))
{
x=matrix(runif(n*d,-1.5,1.5),n,d)
}
f=(x[,1]-1)^2*(x[,1]+1)
g=rep(0,n)
g[x[,1]> -0.5]=2*sqrt(x[x[,1]> -0.5,1]+0.5)
s=1/4+abs(x[,1])
# response
y=ifelse(runif(n)>0.5,f-g,f+g)+rnorm(n,0,sqrt(s))
return(list(x=x,y=y))
}
d=generate_bimodal(10000,100)
plot(d$x[,1],d$y)
data_plot <- read_all_rds("rds/gamma/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gaussian_het/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gaussian_hom/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/bimodal/")
data_plot <- read_all_rds("rds/bimodal/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gaussian_hom/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gamma/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gamma/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gaussian_het/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/bimodal/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gamma/")
plot_perfomance_n(data_plot)
data_plot <- read_all_rds("rds/gaussian_het/")
plot_perfomance_n(data_plot)
